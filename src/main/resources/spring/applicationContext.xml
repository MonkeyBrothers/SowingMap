<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd">

    <!--=============================================配置dao==================================-->
    <!--配置数据库连接池-->
    <!--加载配置文件-->
    <context:property-placeholder location="classpath:jdbc.properties" />
    <!--数据库连接池-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
          destroy-method="close">
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
        <property name="driverClassName" value="${jdbc.driver}" />
        <property name="maxActive" value="20" />
        <property name="maxIdle" value="1000" />

    </bean>

    <!--配置sqlSessionFactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="configLocation" value="classpath:mybatis/SqlMapConfig.xml"></property>
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"></constructor-arg>
        <constructor-arg name="executorType" value="BATCH"></constructor-arg>
    </bean>
    <!-- 配置扫描包，加载mapper代理对象 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.hry.ssm.mapper"></property>
    </bean>

    <!--=============================================配置service==================================-->
    <!-- 扫描包加载Service实现类 -->
    <context:component-scan base-package="com.hry.ssm.service"></context:component-scan>

    <!--=============================================配置transaction事物==================================-->
    <!-- 事务管理器 -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!-- 数据源 -->
        <property name="dataSource" ref="dataSource" />
    </bean>
    <!-- 通知 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <!-- 传播行为 -->
            <tx:method name="save*" propagation="REQUIRED" />
            <tx:method name="insert*" propagation="REQUIRED" />
            <tx:method name="add*" propagation="REQUIRED" />
            <tx:method name="create*" propagation="REQUIRED" />
            <tx:method name="delete*" propagation="REQUIRED" />
            <tx:method name="update*" propagation="REQUIRED" />
            <tx:method name="find*" propagation="SUPPORTS" read-only="true" />
            <tx:method name="select*" propagation="SUPPORTS" read-only="true" />
            <tx:method name="get*" propagation="SUPPORTS" read-only="true" />
        </tx:attributes>
    </tx:advice>
    <!-- 切面 -->
    <aop:config>
        <aop:advisor advice-ref="txAdvice" pointcut="execution(* com.hry.ssm.service.*.*(..))" />
    </aop:config>

    <!--===========================================配置redis================================-->

    <!--&lt;!&ndash;redis单机配置&ndash;&gt;-->
    <!--<bean id="redisClient" class="redis.clients.jedis.JedisPool">-->
        <!--<constructor-arg name="host" value="192.168.64.129" />-->
        <!--<constructor-arg name="port" value="6379" />-->
    <!--</bean>-->
    <!--<bean id="jedisClient" class="com.hry.taotao.sso.dao.impl.JedisClientSingle" />-->

    <!--redis集群配置-->
    <!--<pojo id="redisClient" class="redis.clients.jedis.JedisCluster">-->
    <!--<constructor-arg name="nodes">-->
    <!--<set>-->
    <!--<pojo class="redis.clients.jedis.HostAndPort">-->
    <!--<constructor-arg name="host" value="192.168.64.129" />-->
    <!--<constructor-arg name="port" value="7001" />-->
    <!--</pojo>-->
    <!--<pojo class="redis.clients.jedis.HostAndPort">-->
    <!--<constructor-arg name="host" value="192.168.64.129" />-->
    <!--<constructor-arg name="port" value="7002" />-->
    <!--</pojo>-->
    <!--<pojo class="redis.clients.jedis.HostAndPort">-->
    <!--<constructor-arg name="host" value="192.168.64.129" />-->
    <!--<constructor-arg name="port" value="7003" />-->
    <!--</pojo>-->
    <!--<pojo class="redis.clients.jedis.HostAndPort">-->
    <!--<constructor-arg name="host" value="192.168.64.129" />-->
    <!--<constructor-arg name="port" value="7004" />-->
    <!--</pojo>-->
    <!--<pojo class="redis.clients.jedis.HostAndPort">-->
    <!--<constructor-arg name="host" value="192.168.64.129" />-->
    <!--<constructor-arg name="port" value="7005" />-->
    <!--</pojo>-->
    <!--<pojo class="redis.clients.jedis.HostAndPort">-->
    <!--<constructor-arg name="host" value="192.168.64.129" />-->
    <!--<constructor-arg name="port" value="7006" />-->
    <!--</pojo>-->
    <!--</set>-->
    <!--</constructor-arg>-->
    <!--</pojo>-->
    <!--<pojo id="jedisClient" class="JedisClientCluster" />-->

</beans>